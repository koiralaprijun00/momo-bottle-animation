<svg viewBox="0 0 120 240" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <clipPath id="bottleClip">
      <rect x="35" y="45" width="50" height="140" rx="10"/>
    </clipPath>
    <linearGradient id="waterGradient" x1="0%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" stop-color="#4361ee" />
      <stop offset="100%" stop-color="#3a0ca3" />
    </linearGradient>
    <filter id="dropShadow" x="-20%" y="-20%" width="140%" height="140%">
      <feDropShadow dx="1" dy="1" stdDeviation="1" flood-opacity="0.3"/>
    </filter>
  </defs>
  
  <!-- Bottle body -->
  <rect id="bottleOutline" x="30" y="40" width="60" height="150" rx="15" ry="15" fill="#f8f9fa" stroke="#2b2d42" stroke-width="3" filter="url(#dropShadow)"/>
  
  <!-- Bottle cap -->
  <g id="bottleCap">
    <rect x="38" y="20" width="44" height="20" fill="#4895ef" stroke="#2b2d42" stroke-width="3" rx="4" filter="url(#dropShadow)"/>
    <line x1="45" y1="25" x2="45" y2="35" stroke="white" stroke-width="1" opacity="0.7"/>
    <line x1="55" y1="25" x2="55" y2="35" stroke="white" stroke-width="1" opacity="0.7"/>
    <line x1="65" y1="25" x2="65" y2="35" stroke="white" stroke-width="1" opacity="0.7"/>
    <line x1="75" y1="25" x2="75" y2="35" stroke="white" stroke-width="1" opacity="0.7"/>
  </g>
  
  <!-- Bottle background -->
  <rect id="bottleBackground" x="35" y="45" width="50" height="140" fill="#f8f9fa" rx="10"/>
  
  <!-- Liquid -->
  <rect id="liquid" x="35" y="185" width="50" height="0" fill="url(#waterGradient)" clip-path="url(#bottleClip)"/>
  
  <!-- Modern slider track -->
  <rect id="sliderTrack" x="25" y="200" width="70" height="6" rx="3" fill="#e9ecef" stroke="#ced4da" stroke-width="1"/>
  
  <!-- Slider thumb -->
  <circle id="sliderThumb" cx="60" cy="203" r="8" fill="#4895ef" stroke="#2b2d42" stroke-width="1.5" filter="url(#dropShadow)"/>
  
  <!-- Percentage text -->
  <text id="percentText" x="60" y="225" font-family="Arial, sans-serif" font-size="12" text-anchor="middle" font-weight="bold" fill="#2b2d42">30%</text>
  
  <script type="text/javascript"><![CDATA[
    const liquid = document.getElementById('liquid');
    const sliderThumb = document.getElementById('sliderThumb');
    const percentText = document.getElementById('percentText');
    
    // Constants
    const BOTTLE_CONTENT_Y_START = 45;
    const BOTTLE_MAX_LIQUID_HEIGHT = 140;
    const SLIDER_MIN_X = 25;
    const SLIDER_MAX_X = 95;
    const SLIDER_Y = 203;
    
    // Initial value
    let currentValue = 30;
    
    function updateLiquid(percent) {
      // Update liquid height and position
      const liquidHeight = (percent / 100) * BOTTLE_MAX_LIQUID_HEIGHT;
      const liquidY = BOTTLE_CONTENT_Y_START + BOTTLE_MAX_LIQUID_HEIGHT - liquidHeight;
      
      liquid.setAttribute("height", liquidHeight);
      liquid.setAttribute("y", liquidY);
      
      // Update percentage text
      percentText.textContent = percent + "%";
      
      // Update slider thumb position
      const thumbX = SLIDER_MIN_X + (percent / 100) * (SLIDER_MAX_X - SLIDER_MIN_X);
      sliderThumb.setAttribute("cx", thumbX);
      
      currentValue = percent;
    }
    
    // Initialize
    updateLiquid(currentValue);
    
    // Drag functionality
    let isDragging = false;
    
    sliderThumb.addEventListener('mousedown', startDrag);
    sliderThumb.addEventListener('touchstart', startDrag);
    
    function startDrag(e) {
      e.preventDefault();
      isDragging = true;
      
      document.addEventListener('mousemove', drag);
      document.addEventListener('touchmove', drag);
      document.addEventListener('mouseup', endDrag);
      document.addEventListener('touchend', endDrag);
    }
    
    function drag(e) {
      if (!isDragging) return;
      
      let clientX;
      if (e.type === 'touchmove') {
        clientX = e.touches[0].clientX;
      } else {
        clientX = e.clientX;
      }
      
      const svgRect = document.querySelector('svg').getBoundingClientRect();
      const svgX = clientX - svgRect.left;
      
      // Convert to SVG coordinates
      const svgWidth = svgRect.width;
      const viewBoxWidth = 120;
      const viewBoxX = (svgX / svgWidth) * viewBoxWidth;
      
      // Constrain to slider track
      let thumbX = Math.max(SLIDER_MIN_X, Math.min(SLIDER_MAX_X, viewBoxX));
      
      // Calculate percentage
      const percent = Math.round(((thumbX - SLIDER_MIN_X) / (SLIDER_MAX_X - SLIDER_MIN_X)) * 100);
      
      // Update
      updateLiquid(percent);
    }
    
    function endDrag() {
      isDragging = false;
      document.removeEventListener('mousemove', drag);
      document.removeEventListener('touchmove', drag);
      document.removeEventListener('mouseup', endDrag);
      document.removeEventListener('touchend', endDrag);
    }
    
    // Click on track to set value
    const sliderTrack = document.getElementById('sliderTrack');
    sliderTrack.addEventListener('click', function(e) {
      const svgRect = document.querySelector('svg').getBoundingClientRect();
      const svgX = e.clientX - svgRect.left;
      
      // Convert to SVG coordinates
      const svgWidth = svgRect.width;
      const viewBoxWidth = 120;
      const viewBoxX = (svgX / svgWidth) * viewBoxWidth;
      
      // Constrain to slider track
      let thumbX = Math.max(SLIDER_MIN_X, Math.min(SLIDER_MAX_X, viewBoxX));
      
      // Calculate percentage
      const percent = Math.round(((thumbX - SLIDER_MIN_X) / (SLIDER_MAX_X - SLIDER_MIN_X)) * 100);
      
      // Update
      updateLiquid(percent);
    });
  ]]></script>
</svg>